    /** after view is created - set map view */
    @Override
    public void onViewCreated(View view, Bundle savedInstanceState) {

        super.onViewCreated(view, savedInstanceState);

        if(view!=null) {

            mapView = (MapView) view.findViewById(R.id.mapView);
            mapView.onCreate(savedInstanceState);
            mapView.getMapAsync(this);



            startButton = (Button) view.findViewById(R.id.startButton);

            startButton.setOnClickListener(new View.OnClickListener() {
                @SuppressLint("CheckResult")
                @Override
                public void onClick(View v) {
                    OkHttpClient okHttpClient = new OkHttpClient().newBuilder()
                            .connectTimeout(60, TimeUnit.SECONDS)
                            .readTimeout(60, TimeUnit.SECONDS)
                            .writeTimeout(60, TimeUnit.SECONDS)
                            .build();

                    Retrofit retrofit = new Retrofit.Builder()
                            .baseUrl("http://192.168.1.117:3000/")
                            .client(okHttpClient)
                            .addConverterFactory(GsonConverterFactory.create())
                            .build();

                    RandoWrapperApi randoWrapperApi = retrofit.create(RandoWrapperApi.class);

                    Call<List<Attractors>> call = randoWrapperApi.getAttractors();
                    call.enqueue(new Callback<List<Attractors>>() {
                        @Override
                        public void onResponse(Call<List<Attractors>> call, Response<List<Attractors>> response) {
                            for(Attractors attractors: response.body()){
                                double x = attractors.getAttractors().getCenter().getLatlng().getPoint().getLatitude();
                                double y = attractors.getAttractors().getCenter().getLatlng().getPoint().getLongitude();
                                Log.d("testingall", "value: " + x);
                                Log.d("testingall", "value: " + y);

                                mapboxMap.addMarker(new MarkerOptions()
                                               .position(new LatLng(x, y))
                                               .title("Attractor"));

                            }
                        }

                        @Override
                        public void onFailure(Call<List<Attractors>> call, Throwable t) {
                            Log.d("Errorget", t.getMessage());
                        }


                    });
                }
            });

        }
    }